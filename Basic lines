#..............................................................LINUX COMMAND LINES

GLOSARIO:
pwd -Ruta actual
cd -Moverse entre directorios
ls -Contenido de los directorios
wc -Información del archivo
cat -Contenido del archivo
mkdir -Crear directorio
touch -Crear archivo
rm -Borrar archivo
clear -Limpiar terminal
history -Mostrar historial
whoami -Mostrar usuario actual
date -Mostrar fecha y hora actual 

................................................................................

pwd 
-> Muestra la ruta actual en la que te encuentras

................................................................................

cd 
-> Te desplaza al directorio principal 
cd ..
-> Te desplaza a un nivel superior 

................................................................................

ls
-> Muestra una lista de los archivos donde te encuentres 

ls x :                    Ej: ls-a
-a Muestra todos los archivos incluyendo los ocultos 
-1 Muestra el contenido en formato lista (uno por linea)
-s Muestra el tamaño de los ficheros 
-lt Muestra cuando se modificó un archivo 
-Ss Ordena los ficheros de mayor a menor 
-la Muestra todos los directorios y sus respectivos permisos 

................................................................................

wc X
-> Muestra información del archivo X (-LINEAS-PALABRAS-BITES-)

................................................................................

cat X
-> Muestra el contenido del archivo X 

................................................................................

mkdir X
--> Crea un nuevo directorio en la ruta actual llamado X 

mkdir x1 x2 x3 
--> crea 3 directorios distintos

mkdir x1/x2 
--> crea el directorio x2 dentro del directorio x1 

mkdir -p x1/x2/x3 
-->crea 3 directorios desde 0, unos dentros de otros. 

................................................................................

touch X.txt
--> Crea un archivo vacío llamado X de extensión txt en la ruta actual 

................................................................................

rm X.txt
--> Borra el archivo X 
 rm -r X/
 --> Borra el directorio X

................................................................................

clear
-->Limpia la terminal 

................................................................................

history 
-->devuelve las lineas de comando ejecutadas (historial)

................................................................................

whoami
-->Muestra el usuario actual

................................................................................

date
-->Devuelve la fecha y hora actual 

................................................................................

head X -->Muestra las primeras lineas del archivo X 
head -20 ./X --> Muestra las primeras 20 lineas del archivo X 
head -n -455 ./X -->Muestra las primeras lineas y no me muestres las ultimas 455 lineas 

head X | wc  -->Muestrame las primeras lineas de X (Head) y cuentame las lineas (wc)
head X | tail -5  --> Muestrame las primeras 10 lineas (head), muestrame las ultimas 5 (de las primeras 10)
wc > prueba.csv  -->Guarda la informacion extraida en un archivo csv (Se guarda en la ruta donde estés) 

Ej:  Mete dentro del archivo prueba.csv el comando date (mete la fecha) 
 echo `date`>> prueba.csv
 
 ................................................................................
 find -->Muestra todos los archivos que hay en un fichero (incluyendo todos los que hay dentros) (ls solo muestra los de la ubicacion donde estas)

find . -name "text_file*" -->Buscame todos los archivos que tengan "text_file" 
find . -iname "text_file*" --> Ignora mayus/min
find . -iname "text_file*" -type d  -->Muestrame los directorios (una f mostraria solo los ficheros) 
 find . -maxdepth 4 -iname "text_file*" -type d -->Indica el maximo nivel hasta el que debe buscar (limita los niveles de busqueda)
  find . -maxdepth 4 -iname "text_file*" -perm 777 -->Busca los archivos que tengan todos los permisos ( ! -perm 777 busca los que NO)
   find . -iname "text_file*" - size -10M -->Busca los ficheros que tengan menos de 10Megas
    find . -mmin -60 -->Busca los ficheros que se hayan modificado en los ultimos 60 minutos 
    
find . -iname "text_file*" -type f -exec -->Busca los archivos text_file y sobre la salida ejecuta: 
find . -iname "text_file*" -type f -exec echo "Found it" \; (Cuando encuentres un archivo con text_file escribe "Found it;" (tantas veces como archivos encuentre 
find . -iname "text_file*" -type f -exec ls -s {} \; --> ?¿?


find . -iname "text_file*" -type f -exec sh -c "ls -s {} | wc" \;
find = busca un archivo
find . -iname = busca un archivo ignorando mayus/minus que tengan el nombre -->
"text_file*" = Usa este nombre para la lista sin importarme en que posicion está (si al principio o al final) = * 
-type f = Busca solo ficheros, no directorios 
- exec sh -c =En la salida creada aplica lo siguiente-->  (sh =bash) 
"ls -s{} = Crea una lista de los ficheros encontrados 
| = Une el comando anterior con el siguiente -->
wc = devuelve las dimensiones (aplicado junto a la lista, devolveria las dimensiones de cada elemento de la lista) 

Busca todos los archivos que contengan text_file (ignorando mayus/minus) (buscando solo ficheros, no directorios), 
sobre la salida: ejecuta (exec) una lista (ls -s) 
, mostrandome las dimensiones de dicha lista (wc)

................................................................................

................................................................................
tail -->muestra las ultimas lineas del fichero  
tail +5 ./X -->Desde abajo, muestrame las lineas saltandote las primeras 5 
................................................................................

/ --> dar un path absoluto
echo "$(date)" = echo `date`--> Ejecuta el comando date
sudo --> ejecuta un comando como administrador 

 echo $HISTSIZE -->Muestra el numero de lineas por defecto que muestra el historial 

................................................................................
sudo apt-get update -->Actualizar terminal 
................................................................................


-rw-rw-rw- 1 aibloy aibloy
Se muestran 3 grupos con sus respectivos permisos (---):
r --> puedes leer
w --> puedes escribir
x --> puedes ejecutar 
- --> No se tiene 
El nº indica el nº de directorios que encuentras por encima del archivo 
..................................................................
.................................................................................
chmod -->cambiar permisos (u(-/+)(w/r/x)  dar(+) quitar(-) permisos de (write/read/execute) 
Ej: chmod u-w README.md  -->Quita el permiso de w (write) del archivo README.md

chmod 777 X -->Entrega todos los permisos al archivo X
.................................................................................

.................................................................................
c-->copiar un fichero 
cp x1 x2 -->copiar el fichero x1 y ponerlo en el directorio x2
cp x1 x2 x3 --> copia los archivos x1 y x2 en el directorio x3 

cp -r x1 x2 --> copia el directorio x1 en el directorio x2 
*Si x2 existe, copia el directorio entero 
*Si x2 no existe, copia el contenido del directorio 

cp -p x1 x2 --> copia el fichero x1 y lo pone en el directorio x2 conservando los permisos 
*Cuando haces una cp los permisos de la copia no tienen porque ser iguales 
.................................................................................
mv -->mover archivos 
mv x1 ../  -->Mueve el directorio a un nivel por encima 
mv x1 x2 -->mueve el archivo x1 en x2 
mv x1 x1'/x2 --> mueve el fichero x1 al x2 cambiandolo de nombre a x'
.................................................................................

.................................................................................
alias -->muestra los alias que tienes (*atajos)

type X -->muestra que tipo de elemento es X
Ej: type ll --> ll is alias


.................................................................................
echo - Te devuelve el parámetro 

echo "esto es" "una prueba" - Ejecuta las dos lineas juntas 
-->esto es una prueba 

echo $SHELL - Devuelveme el valor de la variable SHELL (Mostrar que SHELL estás usando) 
(Por defecto suele ser bash) 
.................................................................................
cat - Muestra el contenido de un fichero 
Ej: cat /home --> Is a directory 

cat /etc/os-release - Muestra la version de ubuntu en la que estamos

cat /proc/cpuinfo - Muestra la información del CPU 
cat *.txt - Mostrar la informacion de los archivos que terminan en .txt

.................................................................................
; = Poner varios comandos en la misma linea 
Ej: echo "Hola"; date --> Muestra "Hola" y después la fecha (Ejecuta el comando echo y luego el date)

\; =  No ejecuta el siguiente comando 
echo "hola" \; date --> Ejecuta el comando echo pero no el date. 
.................................................................................

git clone https://github.com/IgorAramb/DS_CL_files.git 

#ATAJOS DE TECLADO 
CTRL + U -->corta la linea
CTRL + Y -->pega la linea 
CTRL + K -->corta la linea desde la posicion del cursor 
CTROL + R X -->Busca en tu historial la ultima vez que escribiste X (CTRL+L Busca otra vez en la que lo hayas escrito, penultima)

